{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\", content=\"width=device-width, initial-scale=1.0\">\n        <title>Doodle Jump</title>\n        <link rel=\"stylesheet\" href=\"doodlejump.css\">\n        <script src=\"doodlejump.js\"></script>\n    </head>\n    <body>\n        <canvas id=\"board\"></canvas>\n    </body>\n</html>",
      "status": "",
      "output": "\n\n    \n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" ,=\"\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Doodle Jump</title>\n        <link rel=\"stylesheet\" href=\"doodlejump.css\">\n        <script src=\"doodlejump.js\"></script>\n    \n    \n        <canvas id=\"board\"></canvas>\n    \n",
      "type": "html"
    },
    {
      "code": "<style>\nbody {\n    text-align: center;\n}\n\n#board {\n    /* background-color: green; */\n    background-image: url(\"./doodlejumpbg.png\");\n}\n</style>",
      "status": "",
      "output": "<style>\nbody {\n    text-align: center;\n}\n\n#board {\n    /* background-color: green; */\n    background-image: url(\"./doodlejumpbg.png\");\n}\n</style>",
      "type": ""
    },
    {
      "code": "//board\nlet board;\nlet boardWidth = 360;\nlet boardHeight = 576;\nlet context;\n\n//doodler\nlet doodlerWidth = 46;\nlet doodlerHeight = 46;\nlet doodlerX = boardWidth/2 - doodlerWidth/2;\nlet doodlerY = boardHeight*7/8 - doodlerHeight;\nlet doodlerRightImg;\nlet doodlerLeftImg;\n\nlet doodler = {\n    img : null,\n    x : doodlerX,\n    y : doodlerY,\n    width : doodlerWidth,\n    height : doodlerHeight\n}\n\n//physics\nlet velocityX = 0; \nlet velocityY = 0; //doodler jump speed\nlet initialVelocityY = -8; //starting velocity Y\nlet gravity = 0.4;\n\n//platforms\nlet platformArray = [];\nlet platformWidth = 60;\nlet platformHeight = 18;\nlet platformImg;\n\nlet score = 0;\nlet maxScore = 0;\nlet gameOver = false;\n\nwindow.onload = function() {\n    board = document.getElementById(\"board\");\n    board.height = boardHeight;\n    board.width = boardWidth;\n    context = board.getContext(\"2d\"); //used for drawing on the board\n\n    //draw doodler\n    // context.fillStyle = \"green\";\n    // context.fillRect(doodler.x, doodler.y, doodler.width, doodler.height);\n\n    //load images\n    doodlerRightImg = new Image();\n    doodlerRightImg.src = \"./doodler-right.png\";\n    doodler.img = doodlerRightImg;\n    doodlerRightImg.onload = function() {\n        context.drawImage(doodler.img, doodler.x, doodler.y, doodler.width, doodler.height);\n    }\n\n    doodlerLeftImg = new Image();\n    doodlerLeftImg.src = \"./doodler-left.png\";\n\n    platformImg = new Image();\n    platformImg.src = \"./platform.png\";\n\n    velocityY = initialVelocityY;\n    placePlatforms();\n    requestAnimationFrame(update);\n    document.addEventListener(\"keydown\", moveDoodler);\n}\n\nfunction update() {\n    requestAnimationFrame(update);\n    if (gameOver) {\n        return;\n    }\n    context.clearRect(0, 0, board.width, board.height);\n\n    //doodler\n    doodler.x += velocityX;\n    if (doodler.x > boardWidth) {\n        doodler.x = 0;\n    }\n    else if (doodler.x + doodler.width < 0) {\n        doodler.x = boardWidth;\n    }\n\n    velocityY += gravity;\n    doodler.y += velocityY;\n    if (doodler.y > board.height) {\n        gameOver = true;\n    }\n    context.drawImage(doodler.img, doodler.x, doodler.y, doodler.width, doodler.height);\n\n    //platforms\n    for (let i = 0; i < platformArray.length; i++) {\n        let platform = platformArray[i];\n        if (velocityY < 0 && doodler.y < boardHeight*3/4) {\n            platform.y -= initialVelocityY; //slide platform down\n        }\n        if (detectCollision(doodler, platform) && velocityY >= 0) {\n            velocityY = initialVelocityY; //jump\n        }\n        context.drawImage(platform.img, platform.x, platform.y, platform.width, platform.height);\n    }\n\n    // clear platforms and add new platform\n    while (platformArray.length > 0 && platformArray[0].y >= boardHeight) {\n        platformArray.shift(); //removes first element from the array\n        newPlatform(); //replace with new platform on top\n    }\n\n    //score\n    updateScore();\n    context.fillStyle = \"black\";\n    context.font = \"16px sans-serif\";\n    context.fillText(score, 5, 20);\n\n    if (gameOver) {\n        context.fillText(\"Game Over: Press 'Space' to Restart\", boardWidth/7, boardHeight*7/8);\n    }\n}\n\nfunction moveDoodler(e) {\n    if (e.code == \"ArrowRight\" || e.code == \"KeyD\") { //move right\n        velocityX = 4;\n        doodler.img = doodlerRightImg;\n    }\n    else if (e.code == \"ArrowLeft\" || e.code == \"KeyA\") { //move left\n        velocityX = -4;\n        doodler.img = doodlerLeftImg;\n    }\n    else if (e.code == \"Space\" && gameOver) {\n        //reset\n        doodler = {\n            img : doodlerRightImg,\n            x : doodlerX,\n            y : doodlerY,\n            width : doodlerWidth,\n            height : doodlerHeight\n        }\n\n        velocityX = 0;\n        velocityY = initialVelocityY;\n        score = 0;\n        maxScore = 0;\n        gameOver = false;\n        placePlatforms();\n    }\n}\n\nfunction placePlatforms() {\n    platformArray = [];\n\n    //starting platforms\n    let platform = {\n        img : platformImg,\n        x : boardWidth/2,\n        y : boardHeight - 50,\n        width : platformWidth,\n        height : platformHeight\n    }\n\n    platformArray.push(platform);\n\n    // platform = {\n    //     img : platformImg,\n    //     x : boardWidth/2,\n    //     y : boardHeight - 150,\n    //     width : platformWidth,\n    //     height : platformHeight\n    // }\n    // platformArray.push(platform);\n\n    for (let i = 0; i < 6; i++) {\n        let randomX = Math.floor(Math.random() * boardWidth*3/4); //(0-1) * boardWidth*3/4\n        let platform = {\n            img : platformImg,\n            x : randomX,\n            y : boardHeight - 75*i - 150,\n            width : platformWidth,\n            height : platformHeight\n        }\n    \n        platformArray.push(platform);\n    }\n}\n\nfunction newPlatform() {\n    let randomX = Math.floor(Math.random() * boardWidth*3/4); //(0-1) * boardWidth*3/4\n    let platform = {\n        img : platformImg,\n        x : randomX,\n        y : -platformHeight,\n        width : platformWidth,\n        height : platformHeight\n    }\n\n    platformArray.push(platform);\n}\n\nfunction detectCollision(a, b) {\n    return a.x < b.x + b.width &&   //a's top left corner doesn't reach b's top right corner\n           a.x + a.width > b.x &&   //a's top right corner passes b's top left corner\n           a.y < b.y + b.height &&  //a's top left corner doesn't reach b's bottom left corner\n           a.y + a.height > b.y;    //a's bottom left corner passes b's top left corner\n}\n\nfunction updateScore() {\n    let points = Math.floor(50*Math.random()); //(0-1) *50 --> (0-50)\n    if (velocityY < 0) { //negative going up\n        maxScore += points;\n        if (score < maxScore) {\n            score = maxScore;\n        }\n    }\n    else if (velocityY >= 0) {\n        maxScore -= points;\n    }\n}",
      "status": "[1]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "function() {\n    board = document.getElementById(\"board\");\n    board.height = boardHeight;\n    board.width = boardWidth;\n    context = board.getContext(\"2d\"); //used for drawing on the board\n\n    //draw doodler\n    // context.fillStyle = \"green\";\n    // context.fillRect(doodler.x, doodler.y, doodler.width, doodler.height);\n\n    //load images\n    doodlerRightImg = new Image();\n    doodlerRightImg.src = \"./doodler-right.png\";\n    doodler.img = doodlerRightImg;\n    doodlerRightImg.onload = function() {\n        context.drawImage(doodler.img, doodler.x, doodler.y, doodler.width, doodler.height);\n    }\n\n    doodlerLeftImg = new Image();\n    doodlerLeftImg.src = \"./doodler-left.png\";\n\n    platformImg = new Image();\n    platformImg.src = \"./platform.png\";\n\n    velocityY = initialVelocityY;\n    placePlatforms();\n    requestAnimationFrame(update);\n    document.addEventListener(\"keydown\", moveDoodler);\n} <br>",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}